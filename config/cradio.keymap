/*
 * Copyright (c) 2020 The ZMK Contributors, 2022 dreipunkteinsvier
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NUM 1
#define FUN 2
#define NAV 3
#define SET 4
#define LOC 5

&lt {
	quick_tap_ms = <200>;
};

&caps_word {
	continue-list = <UNDERSCORE MINUS>;
};

/ {
	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods";
			#binding-cells = <2>;
			tapping_term_ms = <100>;
			quick_tap_ms = <200>;
			flavor = "tap-preferred";
			global-quick-tap;
			bindings = <&kp>, <&kp>;
		};

		hl: homerow_mods_left {
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods left";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <100>;
			quick-tap-ms = <200>;
			global-quick-tap;
			bindings = <&kp>, <&kp>;
			// opposite side hand keys
			hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
		};

		hr: homerow_mods_right {
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods right";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <100>;
			quick-tap-ms = <200>;
			global-quick-tap;
			bindings = <&kp>, <&kp>;
			// opposite side hand keys
			hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
		};

		hs: homerow_mods_shift {
			compatible = "zmk,behavior-hold-tap";
			label = "homerow mods shift";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <200>;
			quick-tap-ms = <100>;
			bindings = <&kp>, <&kp>;
		};
	};
	
	keymap {
		compatible = "zmk,keymap";
		
		default {
			label = "Qwerty";
//  _____________________________       _____________________________
// /  Q  |  W  |  E  |  R  |  T  \     /  Y  |  U  |  I  |  O  |  P  \
// |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  |
//         \ Set/Tab |  Nav/Ent  /     \  Num/Spc  | Fun/Bspc /
//          ---------------------       --------------------
			bindings = <
			&kp Q		&kp W		&kp E		&kp R   	&kp T				&kp Y		&kp U		&kp I		&kp O			&kp P
			&hl LGUI A	&hl LALT S	&hl LCTRL D	&hs LSHFT F	&hm RALT G			&hm RALT H	&hs RSHFT J	&hr RCTRL K	&hr LALT L		&hr LGUI SEMI
			&kp Z		&hm RALT X	&kp C		&kp V   	&kp B				&kp N		&kp M		&kp COMMA	&hm RALT DOT	&kp FSLH
												&lt 4 TAB	&lt 3 RET			&lt 1 SPACE	&lt 2 BSPC
			>;
		};

		numbers {
			label = "Num";
//  _____________________________       _____________________________
// /  -  |  7  |  8  |  9  |  0  \     /     |     |     |     |     \
// |  =  |  4  |  5  |  6  |  '  |     |     | SHFT| CTRL| ALT | GUI |
// |  `  |  1  |  2  |  3  |  \  |     |     |     |     |     |     |
//         \         |           /     \           |         /
//          ---------------------       --------------------
			bindings = <
			&kp MINUS	&kp N7	&kp N8	&kp N9	&kp N0				&none	&none		&none		&none		&none
			&kp EQUAL	&kp N4	&kp N5	&kp N6	&kp SQT				&none	&kp RSHFT	&kp RCTRL	&kp LALT	&kp LGUI
			&kp GRAVE	&kp N1	&kp N2	&kp N3	&kp BSLH			&none	&none		&none		&none		&none
										&none	&none				&none	&none
			>;
		};
		
		functions {
			label = "Func";
//  _____________________________       _____________________________
// / F12 | F7  | F8  | F9  | PRT \     /     |     |     |     |     \
// | F11 | F4  | F5  | F6  | CAPS|     |     | SHFT| CTRL| ALT | GUI |
// | F10 | F1  | F2  | F3  | INS |     |     |     |     |     |     |
//         \         |           /     \           |          /
//          ---------------------       --------------------
			bindings = <
			&kp F12	&kp F7	&kp F8	&kp F9	&kp PSCRN			&none	&none		&none		&none		&none
			&kp F11	&kp F4	&kp F5	&kp F6	&kp CAPS			&none	&kp RSHFT	&kp RCTRL	&kp LALT	&kp LGUI
			&kp F10	&kp F1	&kp F2	&kp F3	&kp INS				&none	&none		&none		&none		&none
									&none	&none				&none	&none
			>;
		};

		navigation {
			label = "Navi";
//  _____________________________       _____________________________
// /     |     |     |     |  {  \     /  }  |     |     |     |     \
// | GUI | ALT | CTRL| SHFT|  (  |     |  )  |  <  |  ^  |  ^  |  >  |
// |     |     |     |     |  [  |     |  ]  | HOME| PGDN| PGUP| END |
//         \         |           /     \           |          /
//          ---------------------       --------------------
			bindings = <
			&none		&none		&none		&none		&kp	LBRC			&kp	RBRC	&kp LC(LEFT)	&kp LC(DOWN)	&kp LC(UP)	&kp LC(RIGHT)
			&kp LGUI	&kp LALT	&kp LCTRL	&kp LSHFT	&kp LPAR			&kp RPAR	&kp LEFT		&kp DOWN		&kp UP		&kp RIGHT
			&none		&kp RALT	&none		&none		&kp LBKT			&kp RBKT	&kp HOME		&kp PG_DN		&kp PG_UP	&kp END
												&none		&none				&none		&none
			>;
		};

		settings {
			label = "Settings";
//  _____________________________       _____________________________
// /  0  |  1  |  2  |  3  |  4  \     /   5 |   6 |   7 |   8 |  9  \
// | 10  | 11  | 12  | 13  | 14  |     |  15 |  16 |  17 |  18 | 19  |
// | 20  | 21  | 22  | 23  | 24  |     |  25 |  26 |  27 |  28 | 29  |
//          \   30   |    31     /     \     32    |  33    /
//           --------------------       ---------------------
			bindings = <
			&none	&none	&none	&reset		&none			&out OUT_USB	&out OUT_BLE	&none			&none			&none
			&none	&none	&none	&bootloader	&none			&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4
			&none	&none	&none	&none		&none			&none			&none			&bt BT_PRV		&bt BT_NXT		&bt BT_CLR
									&none		&none			&none			&none
			>;
		};

		locklayer {
			label = "Lock";
//  _____________________________       _____________________________
// /  -  |  7  |  8  |  9  |  0  \     /     |     |     |     |     \
// |  =  |  4  |  5  |  6  |  '  |     |     |  <  |  ^  |  ^  |  >  |
// |  `  |  1  |  2  |  3  |  \  |     |     | HOME| PGDN| PGUP| END |
//         \         |           /     \           |         /
//          ---------------------       --------------------
			bindings = <
			&kp MINUS		&kp N7		&kp N8			&kp N9			&kp N0				&none	&kp LC(LEFT)	&kp LC(DOWN)	&kp LC(UP)	&kp LC(RIGHT)
			&hm LGUI EQUAL	&hm LALT N4	&hm LCTRL N5	&hm LSHFT N6	&kp SQT				&none	&hm RSHFT LEFT	&hm RCTRL DOWN	&hm LALT UP	&hm LGUI LEFT
			&kp GRAVE		&kp N1		&kp N2			&kp N3			&kp BSLH			&none	&kp HOME		&kp PG_DN		&kp PG_UP	&kp END
														&none			&kp RET				&none					&none
			>;
		};
	};
};


//  _____________________________       _____________________________
// /  0  |  1  |  2  |  3  |  4  \     /   5 |   6 |   7 |   8 |  9  \
// | 10  | 11  | 12  | 13  | 14  |     |  15 |  16 |  17 |  18 | 19  |
// | 20  | 21  | 22  | 23  | 24  |     |  25 |  26 |  27 |  28 | 29  |
//          \   30   |    31     /     \     32    |  33    /
//           --------------------       ---------------------

/ {
	combos {
		compatible = "zmk,combos";
		combo_esc {
			timeout-ms = <20>;
			key-positions = <11 12>;
			bindings = <&kp ESC>;
		};
		combo_tab {
			timeout-ms = <20>;
			key-positions = <12 13>;
			bindings = <&kp TAB>;
		};
		combo_del {
			timeout-ms = <20>;
			key-positions = <15 16>;
			bindings = <&kp DEL>;
		};
		combo_bspc {
			timeout-ms = <20>;
			key-positions = <16 17>;
			bindings = <&kp BSPC>;
		};
		combo_enter {
			timeout-ms = <20>;
			key-positions = <17 18>;
			bindings = <&kp RET>;
		};
		combo_ae {
			timeout-ms = <20>;
			key-positions = <0 10>;
			bindings = <&kp RA(Q)>;
		};
		combo_oe {
			timeout-ms = <20>;
			key-positions = <8 18>;
			bindings = <&kp RA(P)>; 
		};
		combo_ue {
			timeout-ms = <20>;
			key-positions = <6 16>;
			bindings = <&kp RA(Y)>;
		};
		combo_ss {
			timeout-ms = <20>;
			key-positions = <1 11>;
			bindings = <&kp RA(S)>;
		};
		combo_lockScreen {
			timeout-ms = <20>;
			key-positions = <26 27 28 29>;
			bindings = <&kp LG(L)>;
		};
		combo_caps-word {
			timeout-ms = <20>;
			key-positions = <13 16>;
			bindings = <&caps_word>;
		};
		combo_locklayer {
			timeout-ms = <20>;
			key-positions = <30 33>;
			bindings = <&tog LOC>;
		};
	};
};
